<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <style>
    body {
    background-color: #5c6768;
    /* Dark grey background for now color but can put a picture */
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    text-align: center;
    font-family: "Arial", sans-serif;
    line-height: 1.6;
    /* Center the content horizontally */
    }

    .container {
    background-color: rgba(255, 255, 255, 0.9);
    /* Background color with some transparency */
    border-radius: 10px;
    /* Rounded corners */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    /* Shadow effect */
    padding: 20px;
    /* Add padding for spacing */
    max-width: 800px;
    /* Set a maximum width for the container */
    margin: 0 auto;
    /* Center the container horizontally */
    }

    /* Style the form */
    #regForm {
    background-color: #ffffff;
    margin: 25px auto;
    padding: 40px;
    min-width: 500px;
    border-radius: 10px;
    }

    h1 {
    text-align: center;
    color: #1d1d1d;
    /* Change color as desired */
    font-family: Arial, sans-serif;
    /* Change font family as desired */
    font-size: 24px;
    /* Change font size as desired */
    margin-top: 20px;
    /* Adjust top margin as desired */
    }

    h2 {
    color: #050505;
    margin-bottom: 10px;
    font-size: 18px;
    }

    h3 {
    color: #333333;
    margin-bottom: 20px;
    font-weight: bold;
    font-size: 22px;
    }

    img {
    width: 150px;
    /* Adjust the width as needed */
    height: auto;
    /* Maintain the original aspect ratio */
    }

    /* Button Style */
    button {
    display: inline-block;
    background-color: #2e2d2d;
    border: none;
    /* Transparent border initially */
    font-size: 15px;
    font-weight: bold;
    color: rgb(255, 255, 255);
    text-align: center;
    padding: 10px 20px;
    margin: 10px;
    text-decoration: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s;
    }

    button:active {
    transform: translateY(2px);
    /* Move the button down slightly when pressed */
    }

    /* Adjust button container */
    #nextprev_btns {
    width: 100%;
    display: flex;
    justify-content: space-between;
    }

    /* Align buttons */
    #prevBtn,
    #back_to_activities {
    margin-right: 0;
    margin-left: 0;
    font-size: 12px;
    background-color: #583c3c;
    /* Ensure left margin is reset */
    }

    #nextBtn,
    #check_activities {
    margin-left: 0;
    margin-right: 0;
    font-size: 12px;
    background-color: #25492d;
    /* Ensure right margin is reset */
    }

    /* Style the input fields */
    input {
    padding: 10px;
    width: calc(100% - 22px);
    /* Adjusted width to consider padding */
    font-size: 17px;
    font-family: Raleway;
    border: 1px solid #aaaaaa;
    margin: 0 auto;
    /* Center the input horizontally */
    display: block;
    /* Ensuring they take full width */
    }

    /* Mark input boxes that gets an error on validation: */
    input.invalid {
    background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
    display: none;
    }

    /* Hide additional info unless escape room */
    #additional_info {
    display: none;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
    height: 15px;
    width: 15px;
    margin: 0 2px;
    background-color: #bbbbbb;
    border: none;
    border-radius: 50%;
    display: inline-block;
    opacity: 0.5;
    }

    /* Mark the active step: */
    .step.active {
    opacity: 1;
    }

    /* Mark the steps that are finished and valid: */
    .step.finish {
    background-color: #04aa6d;
    }

    /* Hide submit button by default. */
    #submitBtn {
    display: none;
    }

    /* Grid of buttons for regions and activities */
    .btn_grid {
    display: grid;
    margin-top: 20px;
    /* Adjust the value (20px is just an example) */
    margin-bottom: 20px;
    /* Adjust the value (20px is just an example) */
    }

    #regions_nz {
    grid-template-columns: repeat(4, 1fr);
    }

    #activity_btns,
    #nz_yes_or_no {
    grid-template-columns: repeat(2, 1fr);
    }

    #escape_room_btns {
    grid-template-columns: repeat(1, 1fr);
    }

    #activity_btns button,
    #escape_room_btns button {
    border: 4px solid transparent;
    }

    #activity_btns button.selected,
    #escape_room_btns button.selected {
    border: 4px solid rgb(43, 214, 0);
    }

    #options_for_how_did_you_hear_about_us {
    grid-template-columns: repeat(2, 1fr);
    }

    .modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    justify-content: center;
    align-items: center;
    z-index: 9999;
    /* Adjust the z-index value to make sure it's higher than the step indicators */
    }

    .modal-content {
    background-color: white;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    max-height: 70vh;
    /* Adjust this value as needed */
    overflow-y: auto;
    }

    li {
    text-align: left;
    }


    .close {
    color: #8a3737;
    font-size: 45px;
    cursor: pointer;
    float: right;
    }

    #tac-title {
    clear: right;
    }

    #escape_room_options {
    display: none;
    }

    #thank_you_message {
    display: none;
    }
  </style>
</head>

<body>
  <div class="container">
    <img src="https://static.wixstatic.com/media/9fb207_dd7f5fce3035424b9bc4ee31aa53ea85~mv2.png"
      alt="A beautiful landscape" />
    <form id="regForm" method="post" action="" name="sign-in-form">
      <!-- One "tab" for each step in the form: -->

      <!-- Welcome to TZ -->
      <div class="tab">
        <h1>Welcome to Thrillzone and Escape Quest!</h1>
        <h2>Only one sign-in per group required</h2>
        <button type="button" id="startButton" onclick="nextPrev(1)">
          Start
        </button>
      </div>

      <!-- First name, last name and email -->
      <div class="tab">
        <h3>Personal information:</h3>
        <p>
          <input type="text" placeholder="First name..." name="First Name" oninput="this.className = ''" />
        </p>
        <p>
          <input type="text" placeholder="Last name..." name="Last Name" oninput="this.className = ''" />
        </p>
        <p>
          <input type="email" placeholder="Email..." name="E-mail" oninput="this.className = ''" />
        </p>
        <!-- make the email only @, if first leter small character make capital-->
      </div>

      <!-- New Zealand ? -->
      <div class="tab">
        <div id="newZealand?">
          <h3>Do you live in New Zealand?</h3>
          <div id="nz_yes_or_no" class="btn_grid">
            <button type="button" id="yesNZ" onclick="newZealandYes()">
              Yes
            </button>
            <button type="button" id="noNZ" onclick="newZealandNo()">No</button>
          </div>
        </div>
      </div>

      <!-- Region or Other Country ? -->
      <div class="tab" id="region_or_country">
        <input type="hidden" name="Region" id="region_nz" value="Other (International)" />
        <div id="regions">
          <h3>Select your region</h3>
          <div id="regions_nz" class="btn_grid">
            <button type="button" id="btn_Auckland" onclick="setHiddenInputandNext('region_nz', 'Auckland')">
              Auckland
            </button>
            <button type="button" id="btn_BayOfPlenty" onclick="setHiddenInputandNext('region_nz', 'Bay of Plenty')">
              Bay of Plenty
            </button>
            <button type="button" id="btn_Cantebury" onclick="setHiddenInputandNext('region_nz', 'Cantebury')">
              Cantebury
            </button>
            <button type="button" id="btn_Gisborne" onclick="setHiddenInputandNext('region_nz', 'Gisborne')">
              Gisborne
            </button>
            <button type="button" id="btn_HawkesBay" onclick="setHiddenInputandNext('region_nz', 'Hawkes Bay')">
              Hawkes Bay
            </button>
            <button type="button" id="btn_Marlborough" onclick="setHiddenInputandNext('region_nz', 'Marlborough')">
              Marlborough
            </button>
            <button type="button" id="btn_Nelson" onclick="setHiddenInputandNext('region_nz', 'Nelson')">
              Nelson
            </button>
            <button type="button" id="btn_Northland" onclick="setHiddenInputandNext('region_nz', 'Northland')">
              Northland
            </button>
            <button type="button" id="btn_Otago" onclick="setHiddenInputandNext('region_nz', 'Otago')">
              Otago
            </button>
            <button type="button" id="btn_Queenstown" onclick="setHiddenInputandNext('region_nz', 'Queenstown')">
              Queenstown
            </button>
            <button type="button" id="btn_Southland" onclick="setHiddenInputandNext('region_nz', 'Southland')">
              Southland
            </button>
            <button type="button" id="btn_Taranaki" onclick="setHiddenInputandNext('region_nz', 'Taranaki')">
              Taranaki
            </button>
            <button type="button" id="btn_Waikato" onclick="setHiddenInputandNext('region_nz', 'Waikato')">
              Waikato
            </button>
            <button type="button" id="btn_Wellington" onclick="setHiddenInputandNext('region_nz', 'Wellington')">
              Wellington
            </button>
            <button type="button" id="btn_WestCoast" onclick="setHiddenInputandNext('region_nz', 'West Coast')">
              West Coast
            </button>
            <button type="button" id="btn_Whanganui" onclick="setHiddenInputandNext('region_nz', 'Whanganui')">
              Whanganui
            </button>
            <!-- More buttons here for each region-->
          </div>
        </div>
        <div id="countries">
          <h3>What country are you from?</h3>
          <div class="text-container">
            <p>
              <input type="text" list="country_options" id="input_countries" name="Country" placeholder="Enter Country"
                value="" oninput="this.className = ''" />
              <datalist id="country_options">
                <option value="Argentina">Argentina</option>
                <option value="Australia">Australia</option>
                <option value="Austria">Austria</option>
                <option value="Belgium">Belgium</option>
                <option value="Brazil">Brazil</option>
                <option value="Canada">Canada</option>
                <option value="Chile">Chile</option>
                <option value="China">China</option>
                <option value="Colombia">Colombia</option>
                <option value="Czech Republic">Czech Republic</option>
                <option value="Denmark">Denmark</option>
                <option value="Egypt">Egypt</option>
                <option value="Finland">Finland</option>
                <option value="France">France</option>
                <option value="Germany">Germany</option>
                <option value="Greece">Greece</option>
                <option value="Hong Kong">Hong Kong</option>
                <option value="India">India</option>
                <option value="Indonesia">Indonesia</option>
                <option value="Ireland">Ireland</option>
                <option value="Israel">Israel</option>
                <option value="Italy">Italy</option>
                <option value="Japan">Japan</option>
                <option value="Malaysia">Malaysia</option>
                <option value="Mexico">Mexico</option>
                <option value="Netherlands">Netherlands</option>
                <option value="New Caledonia">New Caledonia</option>
                <option value="Norway">Norway</option>
                <option value="Philippines">Philippines</option>
                <option value="Portugal">Portugal</option>
                <option value="Russia">Russia</option>
                <option value="Saudi Arabia">Saudi Arabia</option>
                <option value="Singapore">Singapore</option>
                <option value="South Africa">South Africa</option>
                <option value="South Korea">South Korea</option>
                <option value="Spain">Spain</option>
                <option value="Sweden">Sweden</option>
                <option value="Switzerland">Switzerland</option>
                <option value="Taiwan">Taiwan</option>
                <option value="Thailand">Thailand</option>
                <option value="Turkey">Turkey</option>
                <option value="Ukraine">Ukraine</option>
                <option value="United Arab Emirates">United Arab Emirates</option>
                <option value="United Kingdom">United Kingdom</option>
                <option value="United States">United States</option>
                <option value="Venezuela">Venezuela</option>
                <option value="Vietnam">Vietnam</option>
                <!-- More options here for each country-->
              </datalist>
            </p>
          </div>
        </div>
      </div>

      <!-- How many people ? -->
      <div class="tab">
        <h3>How many people?</h3>
        <p>
          <input type="number" placeholder="How many are you?" name="Number of People" oninput="this.className = ''" />
        </p>
      </div>

      <!-- What activity(ies) ? -->
      <!--  -->
      <div class="tab">
        <div id="step_one_activities">
          <h3>Which experience(s) are you having with us today?</h3>
          <div id="activity_btns" class="btn_grid">
            <button type="button" id="btn_Vortex" onclick="selectActivity(this, 'Vortex 12D Motion', false)">
              Vortex 12D Motion Theatre
            </button>
            <button type="button" id="btn_Omni" onclick="selectActivity(this, 'Omni VR', false)">
              Omni VR
            </button>
            <button type="button" id="btn_Hologate" onclick="selectActivity(this, 'Hologate VR', false)">
              Hologate VR
            </button>
            <button type="button" id="btn_VREscape" onclick="selectActivity(this, 'VR Escape Rooms', false)">
              VR Escape Rooms
            </button>
            <button type="button" id="btn_Minigolf" onclick="selectActivity(this, 'Indoor UV Minigolf', false)">
              Indoor UV Minigolf
            </button>
            <button type="button" id="btn_RaceCar" onclick="selectActivity(this, 'Race Car Simulator', false)">
              Race Car Simulator
            </button>
            <!-- Different button for Indoor Escape Room-->
            <button type="button" id="btn_EscapeRoom" onclick="selectEscapeQuest(this)">
              Indoor Escape Rooms
            </button>
            <button type="button" id="btn_OutdoorEscape"
              onclick="selectActivity(this, 'Outdoor Escape Adventures', false)">
              Outdoor Escape Adventures
            </button>
            <button type="button" id="btn_FrisbeeGolf" onclick="selectActivity(this, 'Frisbee Golf', false)">
              Frisbee Golf
            </button>
            <button type="button" id="btn_KidzClub" onclick="selectActivity(this, 'Kidz Club', false)">
              Kidz Club
            </button>
            <!-- Could be changed to clickable images to select activities-->
          </div>
        </div>
        <!-- If Escape room give 3 options. If kidz club/frisbee/outdoor ask for phone number.  -->
        <div id="step_two_activities">
          <div id="escape_room_options">
            <h3>Select your(s) escape room(s):</h3>
            <div id="escape_rooms_hidden_input">
              <!-- <input type="hidden" name="Escape Room" id="what_escape_room" value="null"> -->
            </div>
            <div id="escape_room_btns" class="btn_grid">
              <button type="button" id="btn_GH" onclick="selectActivity(this, 'Gold Heist in the Gold Rush', true)">
                Gold Heist in the Gold Rush
              </button>
              <button type="button" id="btn_Pow"
                onclick="selectActivity(this, 'Murder in the Prince of Wales Hotel 2', true)">
                Murder in the Prince of Wales Hotel 2
              </button>
              <button type="button" id="btn_JMC"
                onclick="selectActivity(this, 'Jackpot in the Miner\'s Cottage', true)">
                Jackpot in the Miner's Cottage
              </button>
            </div>
          </div>
          <div id="phone_number">
            <h3>Please enter phone number: </h3>
            <div id="phone_number_input">
              <!-- <p><input type="number" id="phone_input" placeholder="Enter Phone Number" name="Phone" oninput="this.className = \'\'"></p> -->
            </div>
          </div>
        </div>
      </div>

      <!-- How did we hear about us ? -->
      <div class="tab">
        <h3>How did you hear about us?</h3>
        <input type="hidden" name="How did you hear about us?" id="how_did_you_hear_about_us" value="" />
        <div class="btn_grid" id="options_for_how_did_you_hear_about_us">
          <button type="button" id="btn_Google" onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'Google')">
            Google
          </button>
          <button type="button" id="btn_TripAdvisor"
            onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'TripAdvisor')">
            TripAdvisor
          </button>
          <button type="button" id="btn_FacebookInstagram"
            onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'Facebook / Instagram')">
            Facebook / Instagram
          </button>
          <button type="button" id="btn_Brochure"
            onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'Brochure')">
            Brochure
          </button>
          <button type="button" id="btn_Hotel" onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'Hotel')">
            Hotel
          </button>
          <button type="button" id="btn_InfoCentre"
            onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'Info Centre')">
            Info Centre
          </button>
          <button type="button" id="btn_RefferalCard"
            onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'Referral Card')">
            Referral Card
          </button>
          <button type="button" id="btn_WordOfMouth"
            onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'Word of mouth')">
            Word of mouth
          </button>
          <button type="button" id="btn_WalkBy" onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'Walk by')">
            Walk by
          </button>
          <button type="button" id="btn_BeenBefore"
            onclick="setHiddenInputandNext('how_did_you_hear_about_us', 'Been before')">
            Been before
          </button>
          <!-- More buttons here for each option-->
        </div>
      </div>

      <!-- Terms and conditions ? -->
      <div class="tab">
        <!-- Add this link or button where you want to trigger the modal -->
        <a href="#" onclick="openModal()">View Terms and Conditions</a>
        <label for="checkbox">I agree</label>
        <input type="checkbox" id="tac_checkbox" name="T&C's" value="I agree" />
      </div>

      <div id="nextprev_btns">
        <button type="button" id="prevBtn" onclick="nextPrev(-1)">
          Back
        </button>
        <button type="button" id="back_to_activities" onclick="displayFirstStepOfActivities()">
          Back
        </button>
        <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
        <button type="button" id="check_activities" onclick="isAdditionalInfoRequired()" disabled>
          Next
        </button>
      </div>

      <!-- All the hidden inputs that are generated for the form submission-->
      <input type="hidden" name="Date Time" id="date_time" value="" />
      <input type="hidden" name="Activity" id="what_activities" value="null">
      <input type="submit" value="Submit" id="submitBtn" disabled="true" />

      <!-- Circles which indicates the steps of the form: -->
      <div style="text-align: center; margin-top: 40px">
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
      </div>
      <!-- Add this div at the end of your body -->
      <div id="termsModal" class="modal">
        <div class="modal-content">
          <span class="close" onclick="closeModal()">&times;</span>
          <h1 id="tac-title">Terms and Conditions</h1>
          <p>Listed below are the terms and conditions in effect for Thrillzone. Please ensure all participants (or
            their guardians) have thoroughly read through the terms and conditions before purchasing any of our
            activities. </p>
          <!-- General (applies to all activities) -->
          <h2>General (applies to all activities)</h2>
          <p>
            <li>By purchasing a ticket to participate in any of our activities at Thrillzone, customers acknowledge the
              operator’s general terms.</li>
            <li>Customers participate in all of the activities at their own risk.</li>
            <li>The operator and any owners / employees associated with this business take no responsibility for
              accidents,
              injuries, and damage caused by misuse of the facility and equipment, including violation of safety
              regulations.</li>
            <li>Customers are always required to return all equipment provided by the operator after finishing their
              activities and follow ALL instructions of staff.</li>
            <li>Participating in the activities may be dangerous if not done in accordance with the rules conducted by
              the operating staff.</li>
            <li>The operator reserves the right to finish any session early without providing any reimbursement if the
              customers do not comply with the rules, cause harm / damage to themselves or others, and / or risk their
              own health and safety.</li>
            <li>The operator reserves the right to charge the customers for the damage done to any equipment or
              interior.</li>
            <li>Valuable items are carried at the customer's own risk.</li>
            <li>By consenting to have pictures and videos taken, the participants authorize for their pictures and
              videos to be used for marketing and social media purposes. These include, but are not limited to, display
              via TV monitors at Thrillzone and publication on Facebook, Instagram, TikTok, and other official
              Thrillzone social media platforms. This is not compulsory and any participant may opt-out by informing a
              staff member.</li>
            <li>By filling in the sign-in form on the iPad, the participant consents to all information included being
              kept in a consumer database. This information is used to compile consumer information and create a
              database that will be used for marketing purposes via email. This is not compulsory and any participant
              may opt-out by informing a staff member.</li>
          </p>

          <!-- Virtual Reality Experiences -->
          <h2>Virtual Reality Experiences (Vortex, Omni VR, Hologate VR, VR Escape Room, Race Car Simulators)</h2>
          <p>
            <li>Thrillzone as an operator advises the participant NOT to take part in these activities if they have any
              existing health issues, such as, but not limited to, heart disease; vertigo; neck / back weakness; the
              participant easily gets motion-sick; or are pregnant.</li>
            <li>The operator does not provide a refund if the participant gets motion-sick or terminates the
              participant's session early for any other reason.</li>
            <li>If participating in Omni VR, customers need to be within the height & weight restrictions provided by
              the operator. The operator reserves the right to charge customers for any damaged gear caused by customers
              providing false information to the operator (f.e. exceeding the weight limit).</li>
          </p>

          <!-- Outdoor Escape Adventure -->
          <h2>Outdoor Escape Adventure</h2>
          <p>
            <li>Escape Adventure is an outdoor activity. Participants are advised to take care and follow the official
              New Zealand road code published by the NZ Transport Agency.</li>
            <li>Parents and Guardians are responsible for minors. Children under 14 years must be accompanied by parents
              or guardians.</li>
            <li>Thrillzone collects a bond deposit payment of NZD $200 in addition to the ticket fee. Thrillzone
              reserves the right to keep the bond deposit to replace items at the replacement cost in the event that the
              activity bag and / or enclosed items and / or iPads are not returned in the same condition.</li>
          </p>
          <!-- Putt ‘N’ Glow Mini Golf -->
          <h2>Putt ‘N’ Glow Mini Golf</h2>
          <p>
            <li>Please don't lean on the walls or bang the clubs on any of the props.</li>
            <li>Watch your step, no running or climbing and NEVER lift the club above the waist! People who behave
              inappropriately will be asked to leave. Take care and be considerate of others!</li>
            <li>Putt n' Glow owners and staff are not responsible for the loss or damage of personal property or
              personal injury.</li>
            <li>It is your responsibility to pay for any lost or damaged equipment. Cameras are running and it is an
              offence to remove them from the premises.</li>
            <li>Participants need to follow the instructions given by Staff members, if any damage or injury happens as
              a result of not following the rules, the participants causing the injury / damage are liable for it.</li>
          </p>

          <!-- Kidz Club -->
          <h2>Kidz Club</h2>
          <p>
            <li>I release all liability from Thrillzone, its owners, and employees, for any personal injury, bodily
              harm, or personal property damage / loss that occurs while my child(ren) are at Thrillzone.</li>
            <li>By agreeing to these terms and conditions, I agree my child is at least four years old.</li>
            <li>If I pick up my child(ren) late, I agree to pay an additional fee, as set out by the fee schedule on the
              Thrillzone website.</li>
            <li>Thrillzone reserves the right to request the child(ren) be picked up early from their session if the
              child(ren) exhibit(s) conduct such as, but not limited to, sickness, emotional turmoil, bullying others,
              or causing disruption for others. If this occurs, refunds will not be issued.</li>
            <li>I consent to Thrillzone team members applying minor medical treatment to my child(ren) if necessary
              (such as applying a band-aid). I recognize, if serious medical treatment is needed, Thrillzone will first
              call an ambulance and notify the parental contact afterwards. I acknowledge Thrillzone is not responsible
              for any medical costs (including ambulance costs.)</li>
            <li>I agree to pay any costs incurred by my child(ren)’s damage to gear or equipment.</li>
            <li>I acknowledge this is a legally binding agreement between Thrillzone and the participating party.</li>
            <li>This is not a comprehensive list of all Kidz Club Terms & Conditions. To see the full Terms &
              Conditions, ask a team member.</li>
          </p>

          <!-- Frisbee Golf Hire -->
          <h2>Frisbee Golf Hire</h2>
          <p>
            <li>Rental Frisbees need to be returned before 9pm on the same day of the rental.</li>
            <li>A deposit of $25 per frisbee or a valid ID Card is required, which will be returned once the frisbees
              are returned without major damage.</li>
            <li>If the frisbee is not returned or returned with damage, there will be a $25 replacement fee per frisbee
              which needs to be paid, or will be taken out of the deposit.</li>
            <li>Thrillzone reserves the right to keep the bond deposit to replace items at the replacement cost in the
              event that the Frisbees are not returned in the same condition.</li>
          </p>

          <!-- Electronic Sign-In -->
          <h2>Electronic Sign-In</h2>
          <p>
            By signing in electronically at Thrillzone on iPads, I agree to the terms and conditions set out for myself
            and the participating party.<br>
          </p>

          <!-- Close button at the bottom -->
          <button type="button" id="closeTermsModalBtn" onclick="closeModal()">
            Close
          </button>

          <!-- Add the actual terms and conditions content here -->
        </div>
      </div>
    </form>
    <div id="thank_you_message">Cheers Mate !</div>
  </div>
  <script>
    const scriptURLTZ =
    "https://script.google.com/macros/s/AKfycbzOyn9R1k3EPqr-nRixnwCXERxfxwR2FUTgkUuFQpPNiopu9vn-omH2qX0V5XIpTyHQ/exec";
    const scriptURLEQ = "https://script.google.com/macros/s/AKfycbxHQrj2mlTipYYrxb9u1YcSZZFjmkvTlwayEFPxzyDXIlPYht7DTwQwH4FFa3TnOknGRA/exec";
    const form = document.forms["sign-in-form"];
    var currentTab = 0; // Current tab is set to be the first tab (0)
    var activityStepOne = true;
    var livesInNZ = true;
    // Define the duration of inactivity in milliseconds
    var inactivityDuration = 5 * 60 * 1000; // 5 minutes in milliseconds (minutes x seconds x miliseconds)
    // Get the checkbox and submit button
    var checkbox = document.getElementById("tac_checkbox");
    var submitBtn = document.getElementById("submitBtn");
    // To know what activities to send to the form
    var listOfTZActivities = [];
    var listOfEscapeRooms = [];
    var escapeQuest = false;
    var phoneNumber;

    showTab(currentTab); // Display the current tab

    form.addEventListener("submit", (e) => {
    // Capitalize inputs before submission
    capitalizeInputs();

    // Generate and set date time value
    document.getElementById("date_time").value = generateDateTimeString();

    // Prevent default form submission
    e.preventDefault();

    // Disable the submit button to prevent multiple submissions
    submitBtn.disabled = true;

    // Hide the form
    form.style.display = "none";

    // Show thank you message
    document.getElementById("thank_you_message").style.display = "inline";

    // Update hidden input fields with the updated list of activities
    if (listOfTZActivities !== null) {
        document.getElementById("what_activities").value = listOfTZActivities.join(", ");
    }

    // Check if for Thrillzone and Escape Quest and send to corresponding URL
    if (listOfTZActivities !== null || listOfEscapeRooms !== null) {
        const promises = [];

        if (listOfTZActivities !== null) {
        promises.push(fetch(scriptURLTZ, { method: "POST", body: new FormData(form) }));
        }

        if (listOfEscapeRooms !== null) {
        promises.push(fetch(scriptURLEQ, { method: "POST", body: new FormData(form) }));
        }

        // Wait for all fetch requests to complete
        Promise.all(promises)
        .then(() => {
            window.location.reload(); // Reload the page after both fetch requests are completed
        })
        .catch((error) => console.error("Error!", error.message));
    }
    });

    // Event listeners for user activity
    document.addEventListener("DOMContentLoaded", startTimer); // Start timer when page loads
    document.addEventListener("click", resetTimer); // Reset timer on click
    document.addEventListener("keypress", resetTimer); // Reset timer on keypress

    function showTab(n) {
    // This function will display the specified tab of the form ...
    var x = document.getElementsByClassName("tab");
    x[n].style.display = "block";
    // ... and fix the Previous/Next buttons:
    document.getElementById("back_to_activities").style.display = "none";
    document.getElementById("check_activities").style.display = "none";
    if (n == 0) {
        document.getElementById("prevBtn").style.display = "none";
        document.getElementById("nextBtn").style.display = "none";
    } else if (n == 2) {
        document.getElementById("prevBtn").style.display = "inline";
        document.getElementById("nextBtn").style.display = "none";
    } else if (n == 3) {
        if (livesInNZ) {
        document.getElementById("nextBtn").style.display = "none";
        } else {
        document.getElementById("nextBtn").style.display = "inline";
        }
    } else if (n == 5) {
        if (activityStepOne == true) {
        displayFirstStepOfActivities();
        } else {
        displaySecondStepOfActivities();
        }
        enableCheckActivityBtn();

    } else if (n == 6) {
        // CHANGE BACK TO DISPLAY SECOND STEP OF ACTIVITIES IN NEXTPREV FUNCITON
        document.getElementById("prevBtn").style.display = "inline";
        document.getElementById("nextBtn").style.display = "none";
    } else {
        document.getElementById("prevBtn").style.display = "inline";
        document.getElementById("nextBtn").style.display = "inline";
    }
    if (n == x.length - 1) {
        // Add event listener to the checkbox
        checkbox.addEventListener("change", function () {
        // If checkbox is checked, enable submit button, else disable it
        if (checkbox.checked) {
            submitBtn.disabled = false;
        } else {
            submitBtn.disabled = true;
        }
        });
        document.getElementById("nextBtn").style.display = "none";
        submitBtn.style.display = "inline";
    } else {
        document.getElementById("nextBtn").innerHTML = "Next";
        submitBtn.style.display = "none";
    }
    // ... and run a function that displays the correct step indicator:
    fixStepIndicator(n);
    }

    function nextPrev(n) {
    // This function will figure out which tab to display
    var x = document.getElementsByClassName("tab");
    // Exit the function if any field in the current tab is invalid (Check email):
    if (n == 1 && !validateForm()) return false;
    // Hide the current tab:
    x[currentTab].style.display = "none";
    // Increase or decrease the current tab by 1:
    currentTab = currentTab + n;
    // if you have reached the end of the form... :
    if (currentTab >= x.length) {
        //...the form gets submitted:
        // document.getElementById("regForm").submit();
        return false;
    }
    // Otherwise, display the correct tab:
    showTab(currentTab);
    }

    function validateForm() {
    // This function deals with validation of the form fields
    var x,
        y,
        i,
        valid = true;
    x = document.getElementsByClassName("tab");
    y = x[currentTab].getElementsByTagName("input");
    // A loop that checks every input field in the current tab:
    for (i = 0; i < y.length; i++) {
        // If a field is empty...
        if (y[i].value == "") {
        // add an "invalid" class to the field:
        y[i].className += " invalid";
        // and set the current valid status to false:
        valid = false;
        } else if (y[i].type === "email") {
        // If the field is an email input
        // Check if the email is valid
        if (!validateEmail(y[i].value)) {
            // If not valid, add an "invalid" class to the field:
            y[i].className += " invalid";
            // and set the current valid status to false:
            valid = false;
        }
        }
    }
    // If the valid status is true, mark the step as finished and valid
    if (valid) {
        document.getElementsByClassName("step")[currentTab].className += " finish";
    }
    return valid; // return the valid status
    }

    function fixStepIndicator(n) {
    // This function removes the "active" class of all steps...
    var i,
        x = document.getElementsByClassName("step");
    for (i = 0; i < x.length; i++) {
        x[i].className = x[i].className.replace(" active", "");
    }
    //... and adds the "active" class to the current step:
    x[n].className += " active";
    }

    // These two functions could be combined into one true/false
    function newZealandYes() {
    livesInNZ = true;
    document.getElementById("input_countries").value = "New Zealand";
    // Show the region options
    document.getElementById("regions").style.display = "inline";
    // Hide the country options
    document.getElementById("countries").style.display = "none";
    nextPrev(1);
    }

    function newZealandNo() {
    livesInNZ = false;
    document.getElementById("input_countries").value = "";
    // Hide the region options
    document.getElementById("regions").style.display = "none";
    // Show the country options
    document.getElementById("countries").style.display = "block";
    nextPrev(1);
    }

    //#region Generate DD/MM/YYYY
    function generateDateTimeString() {
    // Get the current date and time
    var now = new Date();

    // Extract the date components
    var month = now.getMonth() + 1; // Months are zero-based
    var day = now.getDate();
    var year = now.getFullYear();

    // Extract the time components
    var hours = now.getHours();
    var minutes = now.getMinutes();
    var seconds = now.getSeconds();

    // Format the date/time string
    var dateTimeString =
        month +
        "/" +
        day +
        "/" +
        year +
        " " +
        hours +
        ":" +
        minutes +
        ":" +
        seconds;

    // Return the date/time string
    return dateTimeString;
    }
    //#endregion

    // Function to validate email format
    function validateEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
    }

    // Function to set the region
    function setRegion(regionName) {
    document.getElementById("region_nz").value = regionName;
    nextPrev(1);
    }

    // Function to set "How did you hear about us?"
    function setHowDidYouHearAboutUs(option) {
    document.getElementById("how_did_you_hear_about_us").value = option;
    nextPrev(1);
    }

    // These last two functions could be combined in a setHiddenInput function that takes as argument the hidden input ID and the value
    function setHiddenInputandNext(inputID, value) {
    document.getElementById(inputID).value = value;
    nextPrev(1);
    }

    // Function to select or deselect an activity
    function selectActivity(activityBtn, activityName, escapeRoom) {
    if (activityBtn.classList.contains("selected")) {
        // If the activity button is already selected, remove it from the list and remove the selected class
        activityBtn.classList.remove("selected");

        if (escapeRoom) {
        // If escapeRoom is true, remove the activity from the listOfEscapeRooms
        var index = listOfEscapeRooms.indexOf(activityName);
        if (index !== -1) {
            listOfEscapeRooms.splice(index, 1);
        }
        } else {
        // If escapeRoom is false, remove the activity from the listOfTZActivities
        var index = listOfTZActivities.indexOf(activityName);
        if (index !== -1) {
            listOfTZActivities.splice(index, 1);
        }
        }
    } else {
        // If the activity button is not selected, add it to the list and add the selected class
        activityBtn.classList.add("selected");

        if (escapeRoom) {
        // If escapeRoom is true, add the activity to the listOfEscapeRooms
        listOfEscapeRooms.push(activityName);
        } else {
        // If escapeRoom is false, add the activity to the listOfTZActivities
        listOfTZActivities.push(activityName);
        }
    }

    if (escapeRoom) {
        document.getElementById("what_escape_room").value = listOfEscapeRooms.join(", ");
    }

    enableCheckActivityBtn();
    }

    function selectEscapeQuest(activityBtn) {
    if (!escapeQuest) {
        escapeQuest = true;
        activityBtn.classList.add("selected");
    } else {
        escapeQuest = false;
        activityBtn.classList.remove("selected");
    }
    enableCheckActivityBtn();
    console.log(escapeQuest);
    }

    // Function to UpperCase the first letter of all the text inputs
    function capitalizeInputs() {
    const inputs = document.querySelectorAll('input[type="text"]');
    inputs.forEach((input) => {
        let value = input.value.trim();
        if (value.length > 0) {
        // Split the value by space, capitalize each word, then join them back together
        value = value
            .split(" ")
            .map((word) => {
            return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
            })
            .join(" ");
        input.value = value;
        }
    });
    }

    //#region Functions for refresh page and timer 
    // Function to refresh the page BUT could be replaced by Reload Form ???
    function refreshPage() {
    // alert("Page refreshed after 5 minutes of inactivity.");
    location.reload(); // Reload the page but could be document.getElementById("sign-in-form").reset();
    }

    // Function to set timer for inactivity
    function startTimer() {
    clearTimeout(window.timerId); // Clear any existing timer
    window.timerId = setTimeout(refreshPage, inactivityDuration); // 5 minutes
    }

    // Function to reset timer on user activity
    function resetTimer() {
    clearTimeout(window.timerId);
    startTimer();
    }
    //#endregion

    // Enables the check activity based on a condition if at least one activity is selected
    function enableCheckActivityBtn() {
    // Enable or disable the "check activities" button based on conditions
    var checkAcitivtyBtn = document.getElementById("check_activities");
    if (listOfTZActivities.length > 0 || escapeQuest) {
        checkAcitivtyBtn.disabled = false; // Enable the button
    } else {
        checkAcitivtyBtn.disabled = true; // Disable the button
    }
    }

    // Check if phone number is required, if yes returns true
    function isPhoneRequired() {
    return (
        listOfTZActivities.includes("Kidz Club") ||
        listOfTZActivities.includes("Outdoor Escape Adventures") ||
        listOfTZActivities.includes("Frisbee Golf") ||
        escapeQuest
    );
    }

    // Check if additional info is required for the activities, if yes displays additional info contained, if not moves to next tab
    function isAdditionalInfoRequired() {
    if (!isPhoneRequired()) {
        nextPrev(1);
    } else {
        displaySecondStepOfActivities();
    }
    }

    function displayFirstStepOfActivities() {
    activityStepOne = true;
    document.getElementById("phone_number_input").innerHTML = "";
    document.getElementById("escape_rooms_hidden_input").innerHTML = "";
    document.getElementById("step_one_activities").style.display = "inline";
    document.getElementById("step_two_activities").style.display = "none";
    document.getElementById("prevBtn").style.display = "inline";
    document.getElementById("back_to_activities").style.display = "none";
    document.getElementById("nextBtn").style.display = "none";
    document.getElementById("check_activities").style.display = "inline";
    }

    function displaySecondStepOfActivities() {
    // Make sure at least one escape room is selected... if EQ is true bla bla bla else no
    activityStepOne = false;
    // display the additional info
    document.getElementById("phone_number_input").innerHTML =
        '<p><input type="number" id="phone_input" placeholder="Enter Phone Number" name="Phone" oninput="this.className = \'\'"></p>';
    if (phoneNumber !== null) {
        document.getElementById("phone_input").value = phoneNumber;
    }
    document
        .getElementById("phone_input") // Also works with phone_number ? 
        .addEventListener("input", function (event) {
        phoneNumber = event.target.value;
        });
    if (escapeQuest) {
        document.getElementById("escape_room_options").style.display = "inline";
        document.getElementById("escape_rooms_hidden_input").innerHTML = '<input type="hidden" name="Escape Room" id="what_escape_room" value=""></input>';
        document.getElementById("what_escape_room").value = listOfEscapeRooms.join(", ");
        console.log(listOfEscapeRooms);
    } else {
        document.getElementById("escape_room_options").style.display = "none";
    }
    document.getElementById("step_one_activities").style.display = "none";
    document.getElementById("step_two_activities").style.display = "inline";
    document.getElementById("prevBtn").style.display = "none";
    document.getElementById("back_to_activities").style.display = "inline";
    document.getElementById("nextBtn").style.display = "inline";
    document.getElementById("check_activities").style.display = "none";
    }

    function openModal() {
    document.getElementById("termsModal").style.display = "flex";
    }

    function closeModal() {
    document.getElementById("termsModal").style.display = "none";
    }

  </script>
</body>

</html>